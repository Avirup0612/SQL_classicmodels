
-- ----------------------------------------------------- ADVANCED SQL PROJECT -----------------------------------------------------------------
-- -------------------------------------------------------- BATCH - DS38D ---------------------------------------------------------------
-- ----------------------------------------------------- AVIRUP MITRA - S6255 ---------------------------------------------------------

-- ---------------------------------------------------------------------------------------------------------------------------------

# 1. Find the top 10 customers who have placed the most orders. Display customer name and the count of orders placed.

	# Data taken from below mentioned tables
	-- orders 
	-- customers
    
    select c.customerName,count(o.orderNumber) Order_Count from customers c 
    join orders o on c.customerNumber=o.customerNumber 
    group by c.customerNumber 
    order by Order_Count desc
    limit 10;
  
    -- ------------------------------------------------------------------------------------------------------------
    
# 2. Retrieve the list of customers who have placed orders but haven't made any payments yet.
    
    # Data taken from below mentioned tables
	-- customers
    -- orders
    
    select customerName,customerNumber from customers 
    where customerNumber in 
    ( select distinct orders.customerNumber from orders inner join payments 
    on orders.customerNumber=payments.customerNumber
    where orders.status regexp 'On hold');
    
    -- -------------------------------------------------------------------------------------------------------------
    
# 3. Retrieve a product that has been ordered the least number of times. 
    --   Display the product code, product name, and the number of times it has been ordered.
    
    # Data taken from below mentioned tables
    -- products
    -- orderdetails
    
    select p.productCode,p.productName,count(o.orderNumber) Order_count from products p
    join orderdetails o on p.productCode=o.productCode
    group by p.productCode , p.productName
	having Order_count in 
    (select min(ordercount) from 
    (select count(orderNumber) ordercount from orderdetails group by productCode order by ordercount asc)a);
    
    -- ---------------------------------------------------------------------------------------------------------------------
    
# 4.  Classic Models has a product line called "Vintage Cars."
    --    The management wants to know the total revenue generated by this product line in the last quarter of the year 2003 (from October to December). 
    --    Write a MySQL stored procedure that takes no input parameters 
    --    and returns total revenue of the "Vintage Cars" product line for the last quarter of 2003.
    
	# Data taken from below mentioned tables
    -- products
    -- orderdetails
    -- orders
    
    drop procedure if exists GetTotalRevenue;
    DELIMITER ||
    create procedure GetTotalRevenue()
    begin
		with RevenueTable as 
        (select (quantityOrdered*priceEach) Revenue
		from orderdetails where productCode in
		(select productcode from products where productLine regexp 'Vintage Cars') 
		and orderNumber in 
		(select orderNumber from orders where status='Shipped' and month(shippedDate) in (10,11,12) and year(shippedDate)=2003))
        
		select sum(Revenue) Total_Revenue from RevenueTable;
    end
    ||
    call GetTotalRevenue();
    
    -- --------------------------------------------------------------------------------------------------------------------------------
    
# 5. Write an SQL query using CTE's and window functions inside it 
--   to retrieve the top 5 customers along with their total order values across all orders.

# Data taken from below mentioned tables
    -- customers
    -- orderdetails
    -- orders

	with TotalOrderValues as
	(select *,sum(quantityOrdered*priceEach) 
	over(partition by customerNumber order by (quantityOrdered*priceEach) rows between unbounded preceding and unbounded following) 
	as TotalOrderValue from 
	orderdetails natural join orders 
	where status='Shipped')

	select distinct customerName,TotalOrderValue from customers c join TotalOrderValues TOV 
	on c.customerNumber=TOV.customerNumber 
	order by TotalOrderValue desc
	limit 5;

###############################################################################################################################################